/*
* generated by Xtext
*/
package com.ino9dev.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class LtmlGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cStatementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cStatementsStatementParserRuleCall_0 = (RuleCall)cStatementsAssignment.eContents().get(0);
		
		//Model:
		//	statements+=Statement*;
		public ParserRule getRule() { return rule; }

		//statements+=Statement*
		public Assignment getStatementsAssignment() { return cStatementsAssignment; }

		//Statement
		public RuleCall getStatementsStatementParserRuleCall_0() { return cStatementsStatementParserRuleCall_0; }
	}

	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Statement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cManifestParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLoadTestParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLoadGroupParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLoadGeneratorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cScriptParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSL_COMMENTTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Statement:
		//	Manifest | LoadTest | LoadGroup | LoadGenerator | Script | SL_COMMENT;
		public ParserRule getRule() { return rule; }

		//Manifest | LoadTest | LoadGroup | LoadGenerator | Script | SL_COMMENT
		public Alternatives getAlternatives() { return cAlternatives; }

		//Manifest
		public RuleCall getManifestParserRuleCall_0() { return cManifestParserRuleCall_0; }

		//LoadTest
		public RuleCall getLoadTestParserRuleCall_1() { return cLoadTestParserRuleCall_1; }

		//LoadGroup
		public RuleCall getLoadGroupParserRuleCall_2() { return cLoadGroupParserRuleCall_2; }

		//LoadGenerator
		public RuleCall getLoadGeneratorParserRuleCall_3() { return cLoadGeneratorParserRuleCall_3; }

		//Script
		public RuleCall getScriptParserRuleCall_4() { return cScriptParserRuleCall_4; }

		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_5() { return cSL_COMMENTTerminalRuleCall_5; }
	}

	public class ManifestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Manifest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cManifestKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cMnKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cManifestnameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cManifestnameSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cManifestnameAssignment_4_1.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Keyword cVersionKeyword_5_0 = (Keyword)cAlternatives_5.eContents().get(0);
		private final Keyword cVerKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Assignment cVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVersionSTRINGTerminalRuleCall_6_0 = (RuleCall)cVersionAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Manifest:
		//	("Manifest" | "Mn") "{" "Id" name=ID ("Name" manifestname=STRING)? ("Version" | "ver") version=STRING "}";
		public ParserRule getRule() { return rule; }

		//("Manifest" | "Mn") "{" "Id" name=ID ("Name" manifestname=STRING)? ("Version" | "ver") version=STRING "}"
		public Group getGroup() { return cGroup; }

		//"Manifest" | "Mn"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"Manifest"
		public Keyword getManifestKeyword_0_0() { return cManifestKeyword_0_0; }

		//"Mn"
		public Keyword getMnKeyword_0_1() { return cMnKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Id"
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("Name" manifestname=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"Name"
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }

		//manifestname=STRING
		public Assignment getManifestnameAssignment_4_1() { return cManifestnameAssignment_4_1; }

		//STRING
		public RuleCall getManifestnameSTRINGTerminalRuleCall_4_1_0() { return cManifestnameSTRINGTerminalRuleCall_4_1_0; }

		//"Version" | "ver"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"Version"
		public Keyword getVersionKeyword_5_0() { return cVersionKeyword_5_0; }

		//"ver"
		public Keyword getVerKeyword_5_1() { return cVerKeyword_5_1; }

		//version=STRING
		public Assignment getVersionAssignment_6() { return cVersionAssignment_6; }

		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_6_0() { return cVersionSTRINGTerminalRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class LoadTestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LoadTest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cLoadTestKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cLtKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLoadtestnameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLoadtestnameSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cLoadtestnameAssignment_4_1.eContents().get(0);
		private final Keyword cLoadGroupsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLoadgroupsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cLoadgroupsLoadGroupCrossReference_6_0 = (CrossReference)cLoadgroupsAssignment_6.eContents().get(0);
		private final RuleCall cLoadgroupsLoadGroupIDTerminalRuleCall_6_0_1 = (RuleCall)cLoadgroupsLoadGroupCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cLoadgroupsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cLoadgroupsLoadGroupCrossReference_7_1_0 = (CrossReference)cLoadgroupsAssignment_7_1.eContents().get(0);
		private final RuleCall cLoadgroupsLoadGroupIDTerminalRuleCall_7_1_0_1 = (RuleCall)cLoadgroupsLoadGroupCrossReference_7_1_0.eContents().get(1);
		private final Assignment cScheduleAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cScheduleScheduleParserRuleCall_8_0 = (RuleCall)cScheduleAssignment_8.eContents().get(0);
		private final Assignment cReportAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cReportReportParserRuleCall_9_0 = (RuleCall)cReportAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//LoadTest:
		//	("LoadTest" | "Lt") "{" "Id" name=ID ("Name" loadtestname=STRING)? //per loadtest schedule
		//	"LoadGroups" loadgroups+=[LoadGroup] ("," loadgroups+=[LoadGroup])* schedule=Schedule? report=Report "}";
		public ParserRule getRule() { return rule; }

		//("LoadTest" | "Lt") "{" "Id" name=ID ("Name" loadtestname=STRING)? //per loadtest schedule
		//"LoadGroups" loadgroups+=[LoadGroup] ("," loadgroups+=[LoadGroup])* schedule=Schedule? report=Report "}"
		public Group getGroup() { return cGroup; }

		//"LoadTest" | "Lt"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"LoadTest"
		public Keyword getLoadTestKeyword_0_0() { return cLoadTestKeyword_0_0; }

		//"Lt"
		public Keyword getLtKeyword_0_1() { return cLtKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Id"
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("Name" loadtestname=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"Name"
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }

		//loadtestname=STRING
		public Assignment getLoadtestnameAssignment_4_1() { return cLoadtestnameAssignment_4_1; }

		//STRING
		public RuleCall getLoadtestnameSTRINGTerminalRuleCall_4_1_0() { return cLoadtestnameSTRINGTerminalRuleCall_4_1_0; }

		////per loadtest schedule
		//"LoadGroups"
		public Keyword getLoadGroupsKeyword_5() { return cLoadGroupsKeyword_5; }

		//loadgroups+=[LoadGroup]
		public Assignment getLoadgroupsAssignment_6() { return cLoadgroupsAssignment_6; }

		//[LoadGroup]
		public CrossReference getLoadgroupsLoadGroupCrossReference_6_0() { return cLoadgroupsLoadGroupCrossReference_6_0; }

		//ID
		public RuleCall getLoadgroupsLoadGroupIDTerminalRuleCall_6_0_1() { return cLoadgroupsLoadGroupIDTerminalRuleCall_6_0_1; }

		//("," loadgroups+=[LoadGroup])*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//loadgroups+=[LoadGroup]
		public Assignment getLoadgroupsAssignment_7_1() { return cLoadgroupsAssignment_7_1; }

		//[LoadGroup]
		public CrossReference getLoadgroupsLoadGroupCrossReference_7_1_0() { return cLoadgroupsLoadGroupCrossReference_7_1_0; }

		//ID
		public RuleCall getLoadgroupsLoadGroupIDTerminalRuleCall_7_1_0_1() { return cLoadgroupsLoadGroupIDTerminalRuleCall_7_1_0_1; }

		//schedule=Schedule?
		public Assignment getScheduleAssignment_8() { return cScheduleAssignment_8; }

		//Schedule
		public RuleCall getScheduleScheduleParserRuleCall_8_0() { return cScheduleScheduleParserRuleCall_8_0; }

		//report=Report
		public Assignment getReportAssignment_9() { return cReportAssignment_9; }

		//Report
		public RuleCall getReportReportParserRuleCall_9_0() { return cReportReportParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class LoadGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LoadGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cLoadGroupKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cLgrpKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLoadgroupnameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLoadgroupnameSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cLoadgroupnameAssignment_4_1.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Keyword cConccurentCountKeyword_5_0 = (Keyword)cAlternatives_5.eContents().get(0);
		private final Keyword cCcKeyword_5_1 = (Keyword)cAlternatives_5.eContents().get(1);
		private final Assignment cCcAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCcINTTerminalRuleCall_6_0 = (RuleCall)cCcAssignment_6.eContents().get(0);
		private final Keyword cScriptKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cScriptAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cScriptScriptCrossReference_8_0 = (CrossReference)cScriptAssignment_8.eContents().get(0);
		private final RuleCall cScriptScriptIDTerminalRuleCall_8_0_1 = (RuleCall)cScriptScriptCrossReference_8_0.eContents().get(1);
		private final Keyword cIterationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cIterationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Alternatives cIterationAlternatives_10_0 = (Alternatives)cIterationAssignment_10.eContents().get(0);
		private final Keyword cIterationINFINITYKeyword_10_0_0 = (Keyword)cIterationAlternatives_10_0.eContents().get(0);
		private final RuleCall cIterationSTRINGTerminalRuleCall_10_0_1 = (RuleCall)cIterationAlternatives_10_0.eContents().get(1);
		private final Keyword cLoadGeneratorKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLoadgeneratorAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cLoadgeneratorLoadGeneratorCrossReference_12_0 = (CrossReference)cLoadgeneratorAssignment_12.eContents().get(0);
		private final RuleCall cLoadgeneratorLoadGeneratorIDTerminalRuleCall_12_0_1 = (RuleCall)cLoadgeneratorLoadGeneratorCrossReference_12_0.eContents().get(1);
		private final Keyword cRampUpKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cRampupAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cRampupSTRINGTerminalRuleCall_14_0 = (RuleCall)cRampupAssignment_14.eContents().get(0);
		private final Assignment cScheduleAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cScheduleScheduleParserRuleCall_15_0 = (RuleCall)cScheduleAssignment_15.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//LoadGroup:
		//	("LoadGroup" | "Lgrp") "{" "Id" name=ID ("Name" loadgroupname=STRING)? ("ConccurentCount" | "Cc") cc=INT "Script"
		//	script=[Script] "Iteration" iteration=("INFINITY" | STRING) "LoadGenerator" loadgenerator=[LoadGenerator] "RampUp"
		//	rampup=STRING // per loadgroup schedule
		//	schedule=Schedule? "}";
		public ParserRule getRule() { return rule; }

		//("LoadGroup" | "Lgrp") "{" "Id" name=ID ("Name" loadgroupname=STRING)? ("ConccurentCount" | "Cc") cc=INT "Script"
		//script=[Script] "Iteration" iteration=("INFINITY" | STRING) "LoadGenerator" loadgenerator=[LoadGenerator] "RampUp"
		//rampup=STRING // per loadgroup schedule
		//schedule=Schedule? "}"
		public Group getGroup() { return cGroup; }

		//"LoadGroup" | "Lgrp"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"LoadGroup"
		public Keyword getLoadGroupKeyword_0_0() { return cLoadGroupKeyword_0_0; }

		//"Lgrp"
		public Keyword getLgrpKeyword_0_1() { return cLgrpKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Id"
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("Name" loadgroupname=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"Name"
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }

		//loadgroupname=STRING
		public Assignment getLoadgroupnameAssignment_4_1() { return cLoadgroupnameAssignment_4_1; }

		//STRING
		public RuleCall getLoadgroupnameSTRINGTerminalRuleCall_4_1_0() { return cLoadgroupnameSTRINGTerminalRuleCall_4_1_0; }

		//"ConccurentCount" | "Cc"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//"ConccurentCount"
		public Keyword getConccurentCountKeyword_5_0() { return cConccurentCountKeyword_5_0; }

		//"Cc"
		public Keyword getCcKeyword_5_1() { return cCcKeyword_5_1; }

		//cc=INT
		public Assignment getCcAssignment_6() { return cCcAssignment_6; }

		//INT
		public RuleCall getCcINTTerminalRuleCall_6_0() { return cCcINTTerminalRuleCall_6_0; }

		//"Script"
		public Keyword getScriptKeyword_7() { return cScriptKeyword_7; }

		//script=[Script]
		public Assignment getScriptAssignment_8() { return cScriptAssignment_8; }

		//[Script]
		public CrossReference getScriptScriptCrossReference_8_0() { return cScriptScriptCrossReference_8_0; }

		//ID
		public RuleCall getScriptScriptIDTerminalRuleCall_8_0_1() { return cScriptScriptIDTerminalRuleCall_8_0_1; }

		//"Iteration"
		public Keyword getIterationKeyword_9() { return cIterationKeyword_9; }

		//iteration=("INFINITY" | STRING)
		public Assignment getIterationAssignment_10() { return cIterationAssignment_10; }

		//"INFINITY" | STRING
		public Alternatives getIterationAlternatives_10_0() { return cIterationAlternatives_10_0; }

		//"INFINITY"
		public Keyword getIterationINFINITYKeyword_10_0_0() { return cIterationINFINITYKeyword_10_0_0; }

		//STRING
		public RuleCall getIterationSTRINGTerminalRuleCall_10_0_1() { return cIterationSTRINGTerminalRuleCall_10_0_1; }

		//"LoadGenerator"
		public Keyword getLoadGeneratorKeyword_11() { return cLoadGeneratorKeyword_11; }

		//loadgenerator=[LoadGenerator]
		public Assignment getLoadgeneratorAssignment_12() { return cLoadgeneratorAssignment_12; }

		//[LoadGenerator]
		public CrossReference getLoadgeneratorLoadGeneratorCrossReference_12_0() { return cLoadgeneratorLoadGeneratorCrossReference_12_0; }

		//ID
		public RuleCall getLoadgeneratorLoadGeneratorIDTerminalRuleCall_12_0_1() { return cLoadgeneratorLoadGeneratorIDTerminalRuleCall_12_0_1; }

		//"RampUp"
		public Keyword getRampUpKeyword_13() { return cRampUpKeyword_13; }

		//rampup=STRING
		public Assignment getRampupAssignment_14() { return cRampupAssignment_14; }

		//STRING
		public RuleCall getRampupSTRINGTerminalRuleCall_14_0() { return cRampupSTRINGTerminalRuleCall_14_0; }

		//schedule=Schedule?
		public Assignment getScheduleAssignment_15() { return cScheduleAssignment_15; }

		//Schedule
		public RuleCall getScheduleScheduleParserRuleCall_15_0() { return cScheduleScheduleParserRuleCall_15_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}

	public class LoadGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LoadGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cLoadGeneratorKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cLgenKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLoadgeneratornameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLoadgeneratornameSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cLoadgeneratornameAssignment_4_1.eContents().get(0);
		private final Keyword cTargetIpKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIpAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIpSTRINGTerminalRuleCall_6_0 = (RuleCall)cIpAssignment_6.eContents().get(0);
		private final Keyword cTargetPortKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPortAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPortSTRINGTerminalRuleCall_8_0 = (RuleCall)cPortAssignment_8.eContents().get(0);
		private final Keyword cLocationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLocationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cLocationSTRINGTerminalRuleCall_10_0 = (RuleCall)cLocationAssignment_10.eContents().get(0);
		private final Keyword cAuthUsernameKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cUsernameAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cUsernameSTRINGTerminalRuleCall_12_0 = (RuleCall)cUsernameAssignment_12.eContents().get(0);
		private final Keyword cAuthPasswordKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPasswordAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPasswordSTRINGTerminalRuleCall_14_0 = (RuleCall)cPasswordAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//LoadGenerator:
		//	("LoadGenerator" | "Lgen") "{" "Id" name=ID ("Name" loadgeneratorname=STRING)? "TargetIp" ip= //todo IPADDR
		//	STRING "TargetPort" port= //todo PORT
		//	STRING "Location" location=STRING "AuthUsername" username=STRING "AuthPassword" password=STRING "}";
		public ParserRule getRule() { return rule; }

		//("LoadGenerator" | "Lgen") "{" "Id" name=ID ("Name" loadgeneratorname=STRING)? "TargetIp" ip= //todo IPADDR
		//STRING "TargetPort" port= //todo PORT
		//STRING "Location" location=STRING "AuthUsername" username=STRING "AuthPassword" password=STRING "}"
		public Group getGroup() { return cGroup; }

		//"LoadGenerator" | "Lgen"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"LoadGenerator"
		public Keyword getLoadGeneratorKeyword_0_0() { return cLoadGeneratorKeyword_0_0; }

		//"Lgen"
		public Keyword getLgenKeyword_0_1() { return cLgenKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Id"
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("Name" loadgeneratorname=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"Name"
		public Keyword getNameKeyword_4_0() { return cNameKeyword_4_0; }

		//loadgeneratorname=STRING
		public Assignment getLoadgeneratornameAssignment_4_1() { return cLoadgeneratornameAssignment_4_1; }

		//STRING
		public RuleCall getLoadgeneratornameSTRINGTerminalRuleCall_4_1_0() { return cLoadgeneratornameSTRINGTerminalRuleCall_4_1_0; }

		//"TargetIp"
		public Keyword getTargetIpKeyword_5() { return cTargetIpKeyword_5; }

		//ip= //todo IPADDR
		//STRING
		public Assignment getIpAssignment_6() { return cIpAssignment_6; }

		////todo IPADDR
		//STRING
		public RuleCall getIpSTRINGTerminalRuleCall_6_0() { return cIpSTRINGTerminalRuleCall_6_0; }

		//"TargetPort"
		public Keyword getTargetPortKeyword_7() { return cTargetPortKeyword_7; }

		//port= //todo PORT
		//STRING
		public Assignment getPortAssignment_8() { return cPortAssignment_8; }

		////todo PORT
		//STRING
		public RuleCall getPortSTRINGTerminalRuleCall_8_0() { return cPortSTRINGTerminalRuleCall_8_0; }

		//"Location"
		public Keyword getLocationKeyword_9() { return cLocationKeyword_9; }

		//location=STRING
		public Assignment getLocationAssignment_10() { return cLocationAssignment_10; }

		//STRING
		public RuleCall getLocationSTRINGTerminalRuleCall_10_0() { return cLocationSTRINGTerminalRuleCall_10_0; }

		//"AuthUsername"
		public Keyword getAuthUsernameKeyword_11() { return cAuthUsernameKeyword_11; }

		//username=STRING
		public Assignment getUsernameAssignment_12() { return cUsernameAssignment_12; }

		//STRING
		public RuleCall getUsernameSTRINGTerminalRuleCall_12_0() { return cUsernameSTRINGTerminalRuleCall_12_0; }

		//"AuthPassword"
		public Keyword getAuthPasswordKeyword_13() { return cAuthPasswordKeyword_13; }

		//password=STRING
		public Assignment getPasswordAssignment_14() { return cPasswordAssignment_14; }

		//STRING
		public RuleCall getPasswordSTRINGTerminalRuleCall_14_0() { return cPasswordSTRINGTerminalRuleCall_14_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class ScheduleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Schedule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScheduleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cStartKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cStartAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cStartSTRINGTerminalRuleCall_2_0_1_0 = (RuleCall)cStartAssignment_2_0_1.eContents().get(0);
		private final Keyword cEndKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Assignment cEndAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cEndSTRINGTerminalRuleCall_2_0_3_0 = (RuleCall)cEndAssignment_2_0_3.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cDurationKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cDurationAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cDurationINTTerminalRuleCall_2_1_1_0 = (RuleCall)cDurationAssignment_2_1_1.eContents().get(0);
		private final Keyword cDelayKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Assignment cDelayAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cDelayINTTerminalRuleCall_2_1_3_0 = (RuleCall)cDelayAssignment_2_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Schedule:
		//	"Schedule" "{" ("Start" start=STRING "End" end=STRING | "Duration" duration=INT "Delay" delay=INT) "}";
		public ParserRule getRule() { return rule; }

		//"Schedule" "{" ("Start" start=STRING "End" end=STRING | "Duration" duration=INT "Delay" delay=INT) "}"
		public Group getGroup() { return cGroup; }

		//"Schedule"
		public Keyword getScheduleKeyword_0() { return cScheduleKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Start" start=STRING "End" end=STRING | "Duration" duration=INT "Delay" delay=INT
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"Start" start=STRING "End" end=STRING
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"Start"
		public Keyword getStartKeyword_2_0_0() { return cStartKeyword_2_0_0; }

		//start=STRING
		public Assignment getStartAssignment_2_0_1() { return cStartAssignment_2_0_1; }

		//STRING
		public RuleCall getStartSTRINGTerminalRuleCall_2_0_1_0() { return cStartSTRINGTerminalRuleCall_2_0_1_0; }

		//"End"
		public Keyword getEndKeyword_2_0_2() { return cEndKeyword_2_0_2; }

		//end=STRING
		public Assignment getEndAssignment_2_0_3() { return cEndAssignment_2_0_3; }

		//STRING
		public RuleCall getEndSTRINGTerminalRuleCall_2_0_3_0() { return cEndSTRINGTerminalRuleCall_2_0_3_0; }

		//"Duration" duration=INT "Delay" delay=INT
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"Duration"
		public Keyword getDurationKeyword_2_1_0() { return cDurationKeyword_2_1_0; }

		//duration=INT
		public Assignment getDurationAssignment_2_1_1() { return cDurationAssignment_2_1_1; }

		//INT
		public RuleCall getDurationINTTerminalRuleCall_2_1_1_0() { return cDurationINTTerminalRuleCall_2_1_1_0; }

		//"Delay"
		public Keyword getDelayKeyword_2_1_2() { return cDelayKeyword_2_1_2; }

		//delay=INT
		public Assignment getDelayAssignment_2_1_3() { return cDelayAssignment_2_1_3; }

		//INT
		public RuleCall getDelayINTTerminalRuleCall_2_1_3_0() { return cDelayINTTerminalRuleCall_2_1_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ScriptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Script");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cScriptKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cScKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cScriptnameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cScriptnameSTRINGTerminalRuleCall_5_0 = (RuleCall)cScriptnameAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Keyword cTransactionsKeyword_6_0 = (Keyword)cAlternatives_6.eContents().get(0);
		private final Keyword cTrsKeyword_6_1 = (Keyword)cAlternatives_6.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTransactionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTransactionsTransactionParserRuleCall_8_0 = (RuleCall)cTransactionsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Script:
		//	("Script" | "Sc") "{" "Id" name=ID "Name" scriptname=STRING ("Transactions" | "Trs") "{" transactions+=Transaction*
		//	"}" "}";
		public ParserRule getRule() { return rule; }

		//("Script" | "Sc") "{" "Id" name=ID "Name" scriptname=STRING ("Transactions" | "Trs") "{" transactions+=Transaction* "}"
		//"}"
		public Group getGroup() { return cGroup; }

		//"Script" | "Sc"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"Script"
		public Keyword getScriptKeyword_0_0() { return cScriptKeyword_0_0; }

		//"Sc"
		public Keyword getScKeyword_0_1() { return cScKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Id"
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"Name"
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }

		//scriptname=STRING
		public Assignment getScriptnameAssignment_5() { return cScriptnameAssignment_5; }

		//STRING
		public RuleCall getScriptnameSTRINGTerminalRuleCall_5_0() { return cScriptnameSTRINGTerminalRuleCall_5_0; }

		//"Transactions" | "Trs"
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//"Transactions"
		public Keyword getTransactionsKeyword_6_0() { return cTransactionsKeyword_6_0; }

		//"Trs"
		public Keyword getTrsKeyword_6_1() { return cTrsKeyword_6_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//transactions+=Transaction*
		public Assignment getTransactionsAssignment_8() { return cTransactionsAssignment_8; }

		//Transaction
		public RuleCall getTransactionsTransactionParserRuleCall_8_0() { return cTransactionsTransactionParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class TransactionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cTransactionKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cTrKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTransactionanmeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTransactionanmeSTRINGTerminalRuleCall_5_0 = (RuleCall)cTransactionanmeAssignment_5.eContents().get(0);
		private final Keyword cNoKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNoAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNoINTTerminalRuleCall_7_0 = (RuleCall)cNoAssignment_7.eContents().get(0);
		private final Keyword cMethodKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cMethodAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMethodMethodParserRuleCall_9_0 = (RuleCall)cMethodAssignment_9.eContents().get(0);
		private final Keyword cURLKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cUrlAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cUrlSTRINGTerminalRuleCall_11_0 = (RuleCall)cUrlAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cParametersKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cParamsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cParamsParamsParserRuleCall_12_1_0 = (RuleCall)cParamsAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cBodyKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cBodySTRINGTerminalRuleCall_13_1_0 = (RuleCall)cBodyAssignment_13_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
		private final Keyword cCaptureFileNameKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Assignment cCapturefilenameAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cCapturefilenameSTRINGTerminalRuleCall_14_1_0 = (RuleCall)cCapturefilenameAssignment_14_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cResponseExpectedKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cTextAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_15_1_0 = (RuleCall)cTextAssignment_15_1.eContents().get(0);
		private final Keyword cExistKeyword_15_2 = (Keyword)cGroup_15.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Transaction:
		//	("Transaction" | "Tr") "{" "Id" name=ID "Name" transactionanme=STRING "No" no=INT "Method" method=Method "URL"
		//	url=STRING ("Parameters" params+=Params)? ("Body" body=STRING)? ("CaptureFileName" capturefilename=STRING)?
		//	("ResponseExpected" text=STRING "Exist")? "}";
		public ParserRule getRule() { return rule; }

		//("Transaction" | "Tr") "{" "Id" name=ID "Name" transactionanme=STRING "No" no=INT "Method" method=Method "URL"
		//url=STRING ("Parameters" params+=Params)? ("Body" body=STRING)? ("CaptureFileName" capturefilename=STRING)?
		//("ResponseExpected" text=STRING "Exist")? "}"
		public Group getGroup() { return cGroup; }

		//"Transaction" | "Tr"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"Transaction"
		public Keyword getTransactionKeyword_0_0() { return cTransactionKeyword_0_0; }

		//"Tr"
		public Keyword getTrKeyword_0_1() { return cTrKeyword_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Id"
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//"Name"
		public Keyword getNameKeyword_4() { return cNameKeyword_4; }

		//transactionanme=STRING
		public Assignment getTransactionanmeAssignment_5() { return cTransactionanmeAssignment_5; }

		//STRING
		public RuleCall getTransactionanmeSTRINGTerminalRuleCall_5_0() { return cTransactionanmeSTRINGTerminalRuleCall_5_0; }

		//"No"
		public Keyword getNoKeyword_6() { return cNoKeyword_6; }

		//no=INT
		public Assignment getNoAssignment_7() { return cNoAssignment_7; }

		//INT
		public RuleCall getNoINTTerminalRuleCall_7_0() { return cNoINTTerminalRuleCall_7_0; }

		//"Method"
		public Keyword getMethodKeyword_8() { return cMethodKeyword_8; }

		//method=Method
		public Assignment getMethodAssignment_9() { return cMethodAssignment_9; }

		//Method
		public RuleCall getMethodMethodParserRuleCall_9_0() { return cMethodMethodParserRuleCall_9_0; }

		//"URL"
		public Keyword getURLKeyword_10() { return cURLKeyword_10; }

		//url=STRING
		public Assignment getUrlAssignment_11() { return cUrlAssignment_11; }

		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_11_0() { return cUrlSTRINGTerminalRuleCall_11_0; }

		//("Parameters" params+=Params)?
		public Group getGroup_12() { return cGroup_12; }

		//"Parameters"
		public Keyword getParametersKeyword_12_0() { return cParametersKeyword_12_0; }

		//params+=Params
		public Assignment getParamsAssignment_12_1() { return cParamsAssignment_12_1; }

		//Params
		public RuleCall getParamsParamsParserRuleCall_12_1_0() { return cParamsParamsParserRuleCall_12_1_0; }

		//("Body" body=STRING)?
		public Group getGroup_13() { return cGroup_13; }

		//"Body"
		public Keyword getBodyKeyword_13_0() { return cBodyKeyword_13_0; }

		//body=STRING
		public Assignment getBodyAssignment_13_1() { return cBodyAssignment_13_1; }

		//STRING
		public RuleCall getBodySTRINGTerminalRuleCall_13_1_0() { return cBodySTRINGTerminalRuleCall_13_1_0; }

		//("CaptureFileName" capturefilename=STRING)?
		public Group getGroup_14() { return cGroup_14; }

		//"CaptureFileName"
		public Keyword getCaptureFileNameKeyword_14_0() { return cCaptureFileNameKeyword_14_0; }

		//capturefilename=STRING
		public Assignment getCapturefilenameAssignment_14_1() { return cCapturefilenameAssignment_14_1; }

		//STRING
		public RuleCall getCapturefilenameSTRINGTerminalRuleCall_14_1_0() { return cCapturefilenameSTRINGTerminalRuleCall_14_1_0; }

		//("ResponseExpected" text=STRING "Exist")?
		public Group getGroup_15() { return cGroup_15; }

		//"ResponseExpected"
		public Keyword getResponseExpectedKeyword_15_0() { return cResponseExpectedKeyword_15_0; }

		//text=STRING
		public Assignment getTextAssignment_15_1() { return cTextAssignment_15_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_15_1_0() { return cTextSTRINGTerminalRuleCall_15_1_0; }

		//"Exist"
		public Keyword getExistKeyword_15_2() { return cExistKeyword_15_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}

	public class ReportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Report");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cNoreportAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cNoreportNoReportKeyword_2_0_0 = (Keyword)cNoreportAssignment_2_0.eContents().get(0);
		private final Assignment cSummaryAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final Keyword cSummarySummaryKeyword_2_1_0 = (Keyword)cSummaryAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cHpsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final Keyword cHpsHitPerSecondKeyword_3_0_0 = (Keyword)cHpsAssignment_3_0.eContents().get(0);
		private final Assignment cTpsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final Keyword cTpsTransactionPerSecondKeyword_3_1_0 = (Keyword)cTpsAssignment_3_1.eContents().get(0);
		private final Assignment cResptimeAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final Keyword cResptimeResponseTimeKeyword_3_2_0 = (Keyword)cResptimeAssignment_3_2.eContents().get(0);
		private final Assignment cCcAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final Keyword cCcConccurentCountKeyword_3_3_0 = (Keyword)cCcAssignment_3_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cResultKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cResultpathAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cResultpathSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cResultpathAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Report:
		//	"Report" "{" (noreport?="NoReport" | summary?="Summary") (hps?="HitPerSecond" | tps?="TransactionPerSecond" |
		//	resptime?="ResponseTime" | cc?="ConccurentCount")* ("Result" resultpath=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"Report" "{" (noreport?="NoReport" | summary?="Summary") (hps?="HitPerSecond" | tps?="TransactionPerSecond" |
		//resptime?="ResponseTime" | cc?="ConccurentCount")* ("Result" resultpath=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"Report"
		public Keyword getReportKeyword_0() { return cReportKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//noreport?="NoReport" | summary?="Summary"
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//noreport?="NoReport"
		public Assignment getNoreportAssignment_2_0() { return cNoreportAssignment_2_0; }

		//"NoReport"
		public Keyword getNoreportNoReportKeyword_2_0_0() { return cNoreportNoReportKeyword_2_0_0; }

		//summary?="Summary"
		public Assignment getSummaryAssignment_2_1() { return cSummaryAssignment_2_1; }

		//"Summary"
		public Keyword getSummarySummaryKeyword_2_1_0() { return cSummarySummaryKeyword_2_1_0; }

		//(hps?="HitPerSecond" | tps?="TransactionPerSecond" | resptime?="ResponseTime" | cc?="ConccurentCount")*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//hps?="HitPerSecond"
		public Assignment getHpsAssignment_3_0() { return cHpsAssignment_3_0; }

		//"HitPerSecond"
		public Keyword getHpsHitPerSecondKeyword_3_0_0() { return cHpsHitPerSecondKeyword_3_0_0; }

		//tps?="TransactionPerSecond"
		public Assignment getTpsAssignment_3_1() { return cTpsAssignment_3_1; }

		//"TransactionPerSecond"
		public Keyword getTpsTransactionPerSecondKeyword_3_1_0() { return cTpsTransactionPerSecondKeyword_3_1_0; }

		//resptime?="ResponseTime"
		public Assignment getResptimeAssignment_3_2() { return cResptimeAssignment_3_2; }

		//"ResponseTime"
		public Keyword getResptimeResponseTimeKeyword_3_2_0() { return cResptimeResponseTimeKeyword_3_2_0; }

		//cc?="ConccurentCount"
		public Assignment getCcAssignment_3_3() { return cCcAssignment_3_3; }

		//"ConccurentCount"
		public Keyword getCcConccurentCountKeyword_3_3_0() { return cCcConccurentCountKeyword_3_3_0; }

		//("Result" resultpath=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"Result"
		public Keyword getResultKeyword_4_0() { return cResultKeyword_4_0; }

		//resultpath=STRING
		public Assignment getResultpathAssignment_4_1() { return cResultpathAssignment_4_1; }

		//STRING
		public RuleCall getResultpathSTRINGTerminalRuleCall_4_1_0() { return cResultpathSTRINGTerminalRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ParamsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Params");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeySTRINGTerminalRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cAmpersandKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//Params:
		//	"[" key=STRING "=" value=STRING ("&" | "]");
		public ParserRule getRule() { return rule; }

		//"[" key=STRING "=" value=STRING ("&" | "]")
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//key=STRING
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_1_0() { return cKeySTRINGTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }

		//"&" | "]"
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//"&"
		public Keyword getAmpersandKeyword_4_0() { return cAmpersandKeyword_4_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_1() { return cRightSquareBracketKeyword_4_1; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Method");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cGETKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPOSTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDELETEKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cPUTKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//Method:
		//	"GET" | "POST" | "DELETE" | "PUT";
		public ParserRule getRule() { return rule; }

		//"GET" | "POST" | "DELETE" | "PUT"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"GET"
		public Keyword getGETKeyword_0() { return cGETKeyword_0; }

		//"POST"
		public Keyword getPOSTKeyword_1() { return cPOSTKeyword_1; }

		//"DELETE"
		public Keyword getDELETEKeyword_2() { return cDELETEKeyword_2; }

		//"PUT"
		public Keyword getPUTKeyword_3() { return cPUTKeyword_3; }
	}
	
	
	private ModelElements pModel;
	private StatementElements pStatement;
	private ManifestElements pManifest;
	private LoadTestElements pLoadTest;
	private LoadGroupElements pLoadGroup;
	private LoadGeneratorElements pLoadGenerator;
	private ScheduleElements pSchedule;
	private ScriptElements pScript;
	private TransactionElements pTransaction;
	private ReportElements pReport;
	private ParamsElements pParams;
	private MethodElements pMethod;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public LtmlGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.ino9dev.Ltml".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	statements+=Statement*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Statement:
	//	Manifest | LoadTest | LoadGroup | LoadGenerator | Script | SL_COMMENT;
	public StatementElements getStatementAccess() {
		return (pStatement != null) ? pStatement : (pStatement = new StatementElements());
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}

	//Manifest:
	//	("Manifest" | "Mn") "{" "Id" name=ID ("Name" manifestname=STRING)? ("Version" | "ver") version=STRING "}";
	public ManifestElements getManifestAccess() {
		return (pManifest != null) ? pManifest : (pManifest = new ManifestElements());
	}
	
	public ParserRule getManifestRule() {
		return getManifestAccess().getRule();
	}

	//LoadTest:
	//	("LoadTest" | "Lt") "{" "Id" name=ID ("Name" loadtestname=STRING)? //per loadtest schedule
	//	"LoadGroups" loadgroups+=[LoadGroup] ("," loadgroups+=[LoadGroup])* schedule=Schedule? report=Report "}";
	public LoadTestElements getLoadTestAccess() {
		return (pLoadTest != null) ? pLoadTest : (pLoadTest = new LoadTestElements());
	}
	
	public ParserRule getLoadTestRule() {
		return getLoadTestAccess().getRule();
	}

	//LoadGroup:
	//	("LoadGroup" | "Lgrp") "{" "Id" name=ID ("Name" loadgroupname=STRING)? ("ConccurentCount" | "Cc") cc=INT "Script"
	//	script=[Script] "Iteration" iteration=("INFINITY" | STRING) "LoadGenerator" loadgenerator=[LoadGenerator] "RampUp"
	//	rampup=STRING // per loadgroup schedule
	//	schedule=Schedule? "}";
	public LoadGroupElements getLoadGroupAccess() {
		return (pLoadGroup != null) ? pLoadGroup : (pLoadGroup = new LoadGroupElements());
	}
	
	public ParserRule getLoadGroupRule() {
		return getLoadGroupAccess().getRule();
	}

	//LoadGenerator:
	//	("LoadGenerator" | "Lgen") "{" "Id" name=ID ("Name" loadgeneratorname=STRING)? "TargetIp" ip= //todo IPADDR
	//	STRING "TargetPort" port= //todo PORT
	//	STRING "Location" location=STRING "AuthUsername" username=STRING "AuthPassword" password=STRING "}";
	public LoadGeneratorElements getLoadGeneratorAccess() {
		return (pLoadGenerator != null) ? pLoadGenerator : (pLoadGenerator = new LoadGeneratorElements());
	}
	
	public ParserRule getLoadGeneratorRule() {
		return getLoadGeneratorAccess().getRule();
	}

	//Schedule:
	//	"Schedule" "{" ("Start" start=STRING "End" end=STRING | "Duration" duration=INT "Delay" delay=INT) "}";
	public ScheduleElements getScheduleAccess() {
		return (pSchedule != null) ? pSchedule : (pSchedule = new ScheduleElements());
	}
	
	public ParserRule getScheduleRule() {
		return getScheduleAccess().getRule();
	}

	//Script:
	//	("Script" | "Sc") "{" "Id" name=ID "Name" scriptname=STRING ("Transactions" | "Trs") "{" transactions+=Transaction*
	//	"}" "}";
	public ScriptElements getScriptAccess() {
		return (pScript != null) ? pScript : (pScript = new ScriptElements());
	}
	
	public ParserRule getScriptRule() {
		return getScriptAccess().getRule();
	}

	//Transaction:
	//	("Transaction" | "Tr") "{" "Id" name=ID "Name" transactionanme=STRING "No" no=INT "Method" method=Method "URL"
	//	url=STRING ("Parameters" params+=Params)? ("Body" body=STRING)? ("CaptureFileName" capturefilename=STRING)?
	//	("ResponseExpected" text=STRING "Exist")? "}";
	public TransactionElements getTransactionAccess() {
		return (pTransaction != null) ? pTransaction : (pTransaction = new TransactionElements());
	}
	
	public ParserRule getTransactionRule() {
		return getTransactionAccess().getRule();
	}

	//Report:
	//	"Report" "{" (noreport?="NoReport" | summary?="Summary") (hps?="HitPerSecond" | tps?="TransactionPerSecond" |
	//	resptime?="ResponseTime" | cc?="ConccurentCount")* ("Result" resultpath=STRING)? "}";
	public ReportElements getReportAccess() {
		return (pReport != null) ? pReport : (pReport = new ReportElements());
	}
	
	public ParserRule getReportRule() {
		return getReportAccess().getRule();
	}

	//Params:
	//	"[" key=STRING "=" value=STRING ("&" | "]");
	public ParamsElements getParamsAccess() {
		return (pParams != null) ? pParams : (pParams = new ParamsElements());
	}
	
	public ParserRule getParamsRule() {
		return getParamsAccess().getRule();
	}

	//Method:
	//	"GET" | "POST" | "DELETE" | "PUT";
	public MethodElements getMethodAccess() {
		return (pMethod != null) ? pMethod : (pMethod = new MethodElements());
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
